
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: clustersecretstores.secret-manager.itscontained.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: secret-manager.itscontained.io
  names:
    categories:
    - secretmanager
    kind: ClusterSecretStore
    listKind: ClusterSecretStoreList
    plural: clustersecretstores
    shortNames:
    - css
    singular: clustersecretstore
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterSecretStore represents a secure external location for storing
        secrets, which can be referenced as part of `storeRef` fields
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretStoreSpec defines the authentication methods used
          properties:
            aws:
              description: AWS configures this store to sync secrets using AWS SecretManager
              properties:
                authSecretRef:
                  description: Auth configures how secret-manager authenticates with
                    AWS.
                  properties:
                    accessKeyID:
                      description: 'The AccessKeyID is used for authentication. If
                        not set we fall-back to using env vars, shared credentials
                        file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                    role:
                      description: Role is a Role ARN which the SecretManager provider
                        will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                        or the inferred credentials from environment variables, shared
                        credentials file or AWS Instance metadata
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                    secretAccessKey:
                      description: 'The SecretAccessKey is used for authentication.
                        If not set we fall-back to using env vars, shared credentials
                        file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                region:
                  description: Region configures the region to send requests to.
                  type: string
              type: object
            gcp:
              description: GCP configures this store to sync secrets using GCP Secret
                Manager
              properties:
                authSecretRef:
                  description: Auth configures how secret-manager authenticates with
                    GCP Secret Manager.
                  properties:
                    filePath:
                      description: 'The FilePath string is used for authentication
                        using a gcp credentials json file. If not set we fall-back
                        to using `GOOGLE_APPLICATION_CREDENTIALS` or the default service
                        account of the compute engine see: https://cloud.google.com/docs/authentication/production'
                      type: string
                    json:
                      description: 'The JSON secret key selector is used for authentication.
                        If not set we fall-back to using `GOOGLE_APPLICATION_CREDENTIALS`
                        or the default service account of the compute engine see:
                        https://cloud.google.com/docs/authentication/production'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                projectID:
                  description: ProjectID is a convenience string to allow the shortening
                    of secret paths. When set, the prefix projects/<ProjectID> can
                    be removed from the name
                  type: string
              type: object
            vault:
              description: Vault configures this store to sync secrets using a HashiCorp
                Vault KV backend.
              properties:
                auth:
                  description: Auth configures how secret-manager authenticates with
                    the Vault server.
                  properties:
                    appRole:
                      description: AppRole authenticates with Vault using the App
                        Role auth mechanism, with the role and secret stored in a
                        Kubernetes Secret resource.
                      properties:
                        path:
                          description: 'Path where the App Role authentication backend
                            is mounted in Vault, e.g: "approle"'
                          type: string
                        roleId:
                          description: RoleID configured in the App Role authentication
                            backend when setting up the authentication backend in
                            Vault.
                          type: string
                        secretRef:
                          description: Reference to a key in a Secret that contains
                            the App Role secret used to authenticate with Vault. The
                            `key` field must be specified and denotes which entry
                            within the Secret resource is used as the app role secret.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: Namespace of the resource being referred
                                to. Ignored if referent is not cluster-scoped. cluster-scoped
                                defaults to the namespace of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - path
                      - roleId
                      - secretRef
                      type: object
                    kubernetes:
                      description: Kubernetes authenticates with Vault by passing
                        the ServiceAccount token stored in the named Secret resource
                        to the Vault server.
                      properties:
                        mountPath:
                          description: 'Path where the Kubernetes authentication backend
                            is mounted in Vault, e.g: "kubernetes"'
                          type: string
                        role:
                          description: A required field containing the Vault Role
                            to assume. A Role binds a Kubernetes ServiceAccount with
                            a set of Vault policies.
                          type: string
                        secretRef:
                          description: Optional secret field containing a Kubernetes
                            ServiceAccount JWT used for authenticating with Vault.
                            If a name is specified without a key, `token` is the default.
                            If one is not specified, the one bound to the controller
                            will be used.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: Namespace of the resource being referred
                                to. Ignored if referent is not cluster-scoped. cluster-scoped
                                defaults to the namespace of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - mountPath
                      - role
                      type: object
                    tokenSecretRef:
                      description: TokenSecretRef authenticates with Vault by presenting
                        a token.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                caBundle:
                  description: PEM encoded CA bundle used to validate Vault server
                    certificate. Only used if the Server URL is using HTTPS protocol.
                    This parameter is ignored for plain HTTP protocol connection.
                    If not set the system root certificates are used to validate the
                    TLS connection.
                  format: byte
                  type: string
                namespace:
                  description: 'Name of the vault namespace. Namespaces is a set of
                    features within Vault Enterprise that allows Vault environments
                    to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                    can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                  type: string
                path:
                  description: 'Path is the mount path of the Vault KV backend endpoint,
                    e.g: "secret". The v2 KV secret engine version specific "/data"
                    path suffix for fetching secrets from Vault is optional and will
                    be appended if not present in specified path.'
                  type: string
                server:
                  description: 'Server is the connection address for the Vault server,
                    e.g: "https://vault.example.com:8200".'
                  type: string
                version:
                  description: Version is the Vault KV secret engine version. This
                    can be either "v1" or "v2". Version defaults to "v2".
                  type: string
              required:
              - auth
              - path
              - server
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: externalsecrets.secret-manager.itscontained.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].lastTransitionTime
    name: LAST SYNC
    type: date
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: SYNCED
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  - JSONPath: .spec.storeRef.name
    name: STORE
    priority: 1
    type: string
  group: secret-manager.itscontained.io
  names:
    categories:
    - secretmanager
    kind: ExternalSecret
    listKind: ExternalSecretList
    plural: externalsecrets
    shortNames:
    - es
    singular: externalsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ExternalSecret resource can be created which will ensure a Secret
        is available with the referenced contents of the external store
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExternalSecretSpec defines the desired state of ExternalSecret
          properties:
            data:
              description: Data is a list of references to secret values.
              items:
                properties:
                  remoteRef:
                    description: RemoteRef describes the path and other parameters
                      to access the secret for the specific SecretStore
                    properties:
                      name:
                        description: Name of the key, path, or id in the SecretStore.
                        type: string
                      property:
                        description: Property to extract secret value at path in the
                          SecretStore. Can be omitted if not supported by SecretStore
                          or if entire secret should be fetched as in dataFrom reference.
                        type: string
                      version:
                        description: Version of the secret to fetch from the SecretStore.
                          Must be a supported parameter by the referenced SecretStore.
                        type: string
                    required:
                    - name
                    type: object
                  secretKey:
                    description: The key in the generated secret to place fetched
                      secret value into.
                    type: string
                required:
                - remoteRef
                - secretKey
                type: object
              type: array
            dataFrom:
              description: DataFrom references a map of secrets to embed within the
                generated secret.
              items:
                properties:
                  name:
                    description: Name of the key, path, or id in the SecretStore.
                    type: string
                  property:
                    description: Property to extract secret value at path in the SecretStore.
                      Can be omitted if not supported by SecretStore or if entire
                      secret should be fetched as in dataFrom reference.
                    type: string
                  version:
                    description: Version of the secret to fetch from the SecretStore.
                      Must be a supported parameter by the referenced SecretStore.
                    type: string
                required:
                - name
                type: object
              type: array
            storeRef:
              description: StoreRef is a reference to the store backend for this secret.
                If the 'kind' field is not set, or set to 'SecretStore', a SecretStore
                resource with the given name in the same namespace as the SecretStore
                will be used. If the 'kind' field is set to 'ClusterSecretStore',
                a ClusterSecretStore with the provided name will be used. The 'name'
                field in this stanza is required at all times.
              properties:
                group:
                  description: Group of the resource being referred to.
                  type: string
                kind:
                  description: Kind of the resource being referred to.
                  type: string
                name:
                  description: Name of the resource being referred to.
                  type: string
              required:
              - name
              type: object
            template:
              description: Template which will be deep merged into the generated secret.
                Can be used to set for example annotations or type on the generated
                secret.
              format: any
              type: object
          required:
          - storeRef
          type: object
        status:
          description: ExternalSecretStatus defines the observed state of ExternalSecret
          properties:
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: secretstores.secret-manager.itscontained.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: secret-manager.itscontained.io
  names:
    categories:
    - secretmanager
    kind: SecretStore
    listKind: SecretStoreList
    plural: secretstores
    shortNames:
    - ss
    singular: secretstore
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SecretStore represents a secure external location for storing secrets,
        which can be referenced as part of `storeRef` fields
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretStoreSpec defines the authentication methods used
          properties:
            aws:
              description: AWS configures this store to sync secrets using AWS SecretManager
              properties:
                authSecretRef:
                  description: Auth configures how secret-manager authenticates with
                    AWS.
                  properties:
                    accessKeyID:
                      description: 'The AccessKeyID is used for authentication. If
                        not set we fall-back to using env vars, shared credentials
                        file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                    role:
                      description: Role is a Role ARN which the SecretManager provider
                        will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                        or the inferred credentials from environment variables, shared
                        credentials file or AWS Instance metadata
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                    secretAccessKey:
                      description: 'The SecretAccessKey is used for authentication.
                        If not set we fall-back to using env vars, shared credentials
                        file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                region:
                  description: Region configures the region to send requests to.
                  type: string
              type: object
            gcp:
              description: GCP configures this store to sync secrets using GCP Secret
                Manager
              properties:
                authSecretRef:
                  description: Auth configures how secret-manager authenticates with
                    GCP Secret Manager.
                  properties:
                    filePath:
                      description: 'The FilePath string is used for authentication
                        using a gcp credentials json file. If not set we fall-back
                        to using `GOOGLE_APPLICATION_CREDENTIALS` or the default service
                        account of the compute engine see: https://cloud.google.com/docs/authentication/production'
                      type: string
                    json:
                      description: 'The JSON secret key selector is used for authentication.
                        If not set we fall-back to using `GOOGLE_APPLICATION_CREDENTIALS`
                        or the default service account of the compute engine see:
                        https://cloud.google.com/docs/authentication/production'
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                projectID:
                  description: ProjectID is a convenience string to allow the shortening
                    of secret paths. When set, the prefix projects/<ProjectID> can
                    be removed from the name
                  type: string
              type: object
            vault:
              description: Vault configures this store to sync secrets using a HashiCorp
                Vault KV backend.
              properties:
                auth:
                  description: Auth configures how secret-manager authenticates with
                    the Vault server.
                  properties:
                    appRole:
                      description: AppRole authenticates with Vault using the App
                        Role auth mechanism, with the role and secret stored in a
                        Kubernetes Secret resource.
                      properties:
                        path:
                          description: 'Path where the App Role authentication backend
                            is mounted in Vault, e.g: "approle"'
                          type: string
                        roleId:
                          description: RoleID configured in the App Role authentication
                            backend when setting up the authentication backend in
                            Vault.
                          type: string
                        secretRef:
                          description: Reference to a key in a Secret that contains
                            the App Role secret used to authenticate with Vault. The
                            `key` field must be specified and denotes which entry
                            within the Secret resource is used as the app role secret.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: Namespace of the resource being referred
                                to. Ignored if referent is not cluster-scoped. cluster-scoped
                                defaults to the namespace of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - path
                      - roleId
                      - secretRef
                      type: object
                    kubernetes:
                      description: Kubernetes authenticates with Vault by passing
                        the ServiceAccount token stored in the named Secret resource
                        to the Vault server.
                      properties:
                        mountPath:
                          description: 'Path where the Kubernetes authentication backend
                            is mounted in Vault, e.g: "kubernetes"'
                          type: string
                        role:
                          description: A required field containing the Vault Role
                            to assume. A Role binds a Kubernetes ServiceAccount with
                            a set of Vault policies.
                          type: string
                        secretRef:
                          description: Optional secret field containing a Kubernetes
                            ServiceAccount JWT used for authenticating with Vault.
                            If a name is specified without a key, `token` is the default.
                            If one is not specified, the one bound to the controller
                            will be used.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's
                                `data` field to be used. Some instances of this field
                                may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: 'Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: Namespace of the resource being referred
                                to. Ignored if referent is not cluster-scoped. cluster-scoped
                                defaults to the namespace of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - mountPath
                      - role
                      type: object
                    tokenSecretRef:
                      description: TokenSecretRef authenticates with Vault by presenting
                        a token.
                      properties:
                        key:
                          description: The key of the entry in the Secret resource's
                            `data` field to be used. Some instances of this field
                            may be defaulted, in others it may be required.
                          type: string
                        name:
                          description: 'Name of the resource being referred to. More
                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: Namespace of the resource being referred to.
                            Ignored if referent is not cluster-scoped. cluster-scoped
                            defaults to the namespace of the referent.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                caBundle:
                  description: PEM encoded CA bundle used to validate Vault server
                    certificate. Only used if the Server URL is using HTTPS protocol.
                    This parameter is ignored for plain HTTP protocol connection.
                    If not set the system root certificates are used to validate the
                    TLS connection.
                  format: byte
                  type: string
                namespace:
                  description: 'Name of the vault namespace. Namespaces is a set of
                    features within Vault Enterprise that allows Vault environments
                    to support Secure Multi-tenancy. e.g: "ns1" More about namespaces
                    can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                  type: string
                path:
                  description: 'Path is the mount path of the Vault KV backend endpoint,
                    e.g: "secret". The v2 KV secret engine version specific "/data"
                    path suffix for fetching secrets from Vault is optional and will
                    be appended if not present in specified path.'
                  type: string
                server:
                  description: 'Server is the connection address for the Vault server,
                    e.g: "https://vault.example.com:8200".'
                  type: string
                version:
                  description: Version is the Vault KV secret engine version. This
                    can be either "v1" or "v2". Version defaults to "v2".
                  type: string
              required:
              - auth
              - path
              - server
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
